
// Описание_метода
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция Настройка(Имя, ВнешняяСистема) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	рег.ЗначениеНастройки КАК ЗначениеНастройки
		|ИЗ
		|	РегистрСведений.ксп_ДополнительныеНастройкиИнтеграций КАК рег
		|ГДЕ
		|	рег.Имя = &Имя
		|	И рег.ВнешняяСистема = &ВнешняяСистема";
	
	Запрос.УстановитьПараметр("Имя", Имя);
	Запрос.УстановитьПараметр("ВнешняяСистема", СокрЛП(ВнешняяСистема));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		возврат ВыборкаДетальныеЗаписи.ЗначениеНастройки;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

		
	Возврат Неопределено;
	
КонецФункции    


// Описание_метода
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
Процедура ДобавитьЗапись(Имя,ВнешняяСистема,Значение,Обновлять=Ложь) Экспорт
	
	НаборЗаписей = РегистрыСведений.ксп_ДополнительныеНастройкиИнтеграций.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Имя.Установить(Имя);
	НаборЗаписей.Отбор.ВнешняяСистема.Установить(ВнешняяСистема);
	Если Обновлять = Ложь Тогда
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() = 0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Имя = Имя;
			НоваяЗапись.ВнешняяСистема = ВнешняяСистема;
			НоваяЗапись.ЗначениеНастройки = Значение;
			
			НаборЗаписей.Записать();
		КонецЕсли;
	Иначе 
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Имя = Имя;
		НоваяЗапись.ВнешняяСистема = ВнешняяСистема;
		НоваяЗапись.ЗначениеНастройки = Значение;
		
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
		
КонецПроцедуры

